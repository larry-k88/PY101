'''
A double number is an even-length number whose left-side digits are
exactly the same as its right-side digits. For example, 44, 3333,
103103, and 7676 are all double numbers, whereas 444, 334433, and 107
are not.

Write a function that returns the number provided as an argument
multiplied by two, unless the argument is a double number. If the
argument is a double number, return the double number as-is.

Problem:    Take an integer and check if it's a double number. If it is,
            return the number; else return the value of it doubled
            Input - 1x integer
            Output - 1x integer
            Requirements:
                integer
                double number definition need to be checked

Examples:   print(twice(37) == 74)                  # True
            print(twice(44) == 44)                  # True
            print(twice(334433) == 668866)          # True
            print(twice(444) == 888)                # True
            print(twice(107) == 214)                # True
            print(twice(103103) == 103103)          # True
            print(twice(3333) == 3333)              # True
            print(twice(7676) == 7676)              # True

Data:       if statement
            * operator
                
Algorithm:  START
            IF len(string(number)) % 2 == 1
                return number
            IF number is a double number:
                return number
            ELSE
                return number * 2
            END

'''
def twice(number):
    string_number = str(number)
    centre = len(string_number) // 2
    return (number if string_number[:centre] == string_number[centre:]
           else number * 2)

print(twice(37) == 74)                  # True
print(twice(44) == 44)                  # True
print(twice(334433) == 668866)          # True
print(twice(444) == 888)                # True
print(twice(107) == 214)                # True
print(twice(103103) == 103103)          # True
print(twice(3333) == 3333)              # True
print(twice(7676) == 7676)              # True