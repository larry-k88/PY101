'''
Given a string that consists of some words and an assortment of
non-alphabetic characters, write a function that returns that string
with all of the non-alphabetic characters replaced by spaces. If one or
more non-alphabetic characters occur in a row, you should only have one
space in the result (i.e., the result string should never have
consecutive spaces).

Problem:    Take a string and return it with any non-alphabetic
            characters replaced with a single space
            Input - any string
            Output - string with no non-alphabetic characters
            Requirements:
                non-alphabetic characters replaced with space
                single spaces only

Examples:   print(clean_up("---what's my +*& line?") == " what s my line ")
            # True

Data:       replace()
                
Algorithm:  START
            IF not string.isalpha():
                result = ''
                FOR char in string:
                    IF char is alphabetic:
                        continue
                    ELSE:
                        result += char
            return string
            END

'''
def clean_up(string):
    if not string.isalpha():
        result = ''
        for char in string:
            if char.isalpha():
                result += char
            elif not result.endswith(' '):
                result += ' '
        return result

    return string

print(clean_up("---what's my +*& line?") == " what s my line ")
# True